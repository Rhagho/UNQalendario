apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// Old plugin mechanism
apply plugin: 'org.junit.platform.gradle.plugin' // Depends on external dependencies for build script

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

dependencies {
    compile group: 'info.cukes', name: 'cucumber-jvm', version: '1.2.5', ext: 'pom'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-spring', version: '1.2.5'
    compile 'org.mongodb:mongo-java-driver:3.3.0'
    compile group: 'org.jongo', name: 'jongo', version: '1.4.0'
}

test {
    finalizedBy jacocoTestReport
}

// Code coverage
jacoco {
    toolVersion = '0.7.9'
    applyTo junitPlatformTest
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

check.dependsOn jacocoTestReport

junitPlatformTest {
    jacoco {
        destinationFile = file("$buildDir/jacoco/test.exec")
    }
}

repositories {
    mavenCentral()
}

buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }

}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies{
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.5.RELEASE'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}
